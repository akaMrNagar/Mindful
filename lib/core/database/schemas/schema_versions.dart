// dart format width=80
import 'dart:convert';

import 'package:drift/internal/versioned_schema.dart' as i0;
import 'package:drift/drift.dart' as i1;
import 'package:drift/drift.dart';
import 'package:mindful/config/app_constants.dart';
import 'package:mindful/core/enums/default_home_tab.dart';
import 'package:mindful/core/enums/reminder_type.dart';
import 'package:mindful/core/utils/default_models_utils.dart'; // ignore_for_file: type=lint,unused_import

// GENERATED BY drift_dev, DO NOT MODIFY.
final class Schema2 extends i0.VersionedSchema {
  Schema2({required super.database}) : super(version: 2);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appRestrictionTable,
    bedtimeScheduleTable,
    crashLogsTable,
    focusModeTable,
    focusProfileTable,
    focusSessionsTable,
    mindfulSettingsTable,
    invincibleModeTable,
    restrictionGroupsTable,
    wellbeingTable,
  ];
  late final Shape0 appRestrictionTable = Shape0(
      source: i0.VersionedTable(
        entityName: 'app_restriction_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(app_package)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 bedtimeScheduleTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'bedtime_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 crashLogsTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'crash_logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 focusModeTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'focus_mode_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 focusProfileTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'focus_profile_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(session_type)',
        ],
        columns: [
          _column_27,
          _column_28,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 focusSessionsTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'focus_sessions_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 mindfulSettingsTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'mindful_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 invincibleModeTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'invincible_mode_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
          _column_55,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 restrictionGroupsTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'restriction_groups_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_56,
          _column_1,
          _column_3,
          _column_4,
          _column_5,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 wellbeingTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'wellbeing_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_57,
          _column_58,
          _column_59,
          _column_60,
          _column_61,
          _column_62,
          _column_63,
          _column_64,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape0 extends i0.VersionedTable {
  Shape0({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get appPackage =>
      columnsByName['app_package']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get timerSec =>
      columnsByName['timer_sec']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get launchLimit =>
      columnsByName['launch_limit']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodStart =>
      columnsByName['active_period_start']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodEnd =>
      columnsByName['active_period_end']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get periodDurationInMins =>
      columnsByName['period_duration_in_mins']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get canAccessInternet =>
      columnsByName['can_access_internet']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get associatedGroupId =>
      columnsByName['associated_group_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get alertInterval =>
      columnsByName['alert_interval']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get alertByDialog =>
      columnsByName['alert_by_dialog']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<String> _column_0(String aliasedName) =>
    i1.GeneratedColumn<String>('app_package', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<int> _column_1(String aliasedName) =>
    i1.GeneratedColumn<int>('timer_sec', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_2(String aliasedName) =>
    i1.GeneratedColumn<int>('launch_limit', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_3(String aliasedName) =>
    i1.GeneratedColumn<int>('active_period_start', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_4(String aliasedName) =>
    i1.GeneratedColumn<int>('active_period_end', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_5(String aliasedName) =>
    i1.GeneratedColumn<int>('period_duration_in_mins', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<bool> _column_6(String aliasedName) =>
    i1.GeneratedColumn<bool>('can_access_internet', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("can_access_internet" IN (0, 1))'),
        defaultValue: const Constant(true));
i1.GeneratedColumn<int> _column_7(String aliasedName) =>
    i1.GeneratedColumn<int>('associated_group_id', aliasedName, true,
        type: i1.DriftSqlType.int, defaultValue: const Constant(null));
i1.GeneratedColumn<int> _column_8(String aliasedName) =>
    i1.GeneratedColumn<int>('alert_interval', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(15 * 60));
i1.GeneratedColumn<bool> _column_9(String aliasedName) =>
    i1.GeneratedColumn<bool>('alert_by_dialog', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("alert_by_dialog" IN (0, 1))'),
        defaultValue: const Constant(false));

class Shape1 extends i0.VersionedTable {
  Shape1({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get scheduleStartTime =>
      columnsByName['schedule_start_time']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get scheduleEndTime =>
      columnsByName['schedule_end_time']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get scheduleDurationInMins =>
      columnsByName['schedule_duration_in_mins']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get scheduleDays =>
      columnsByName['schedule_days']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isScheduleOn =>
      columnsByName['is_schedule_on']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get shouldStartDnd =>
      columnsByName['should_start_dnd']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get distractingApps =>
      columnsByName['distracting_apps']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<int> _column_10(String aliasedName) =>
    i1.GeneratedColumn<int>('id', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_11(String aliasedName) =>
    i1.GeneratedColumn<int>('schedule_start_time', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_12(String aliasedName) =>
    i1.GeneratedColumn<int>('schedule_end_time', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_13(String aliasedName) =>
    i1.GeneratedColumn<int>('schedule_duration_in_mins', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<String> _column_14(String aliasedName) =>
    i1.GeneratedColumn<String>('schedule_days', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue:
            Constant(jsonEncode([false, true, true, true, true, true, false])));
i1.GeneratedColumn<bool> _column_15(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_schedule_on', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("is_schedule_on" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_16(String aliasedName) =>
    i1.GeneratedColumn<bool>('should_start_dnd', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("should_start_dnd" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<String> _column_17(String aliasedName) =>
    i1.GeneratedColumn<String>('distracting_apps', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: Constant(jsonEncode([])));

class Shape2 extends i0.VersionedTable {
  Shape2({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get timeStamp =>
      columnsByName['time_stamp']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get error =>
      columnsByName['error']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get stackTrace =>
      columnsByName['stack_trace']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<int> _column_18(String aliasedName) =>
    i1.GeneratedColumn<int>('id', aliasedName, false,
        hasAutoIncrement: true,
        type: i1.DriftSqlType.int,
        defaultConstraints:
            i1.GeneratedColumn.constraintIsAlways('PRIMARY KEY AUTOINCREMENT'));
i1.GeneratedColumn<String> _column_19(String aliasedName) =>
    i1.GeneratedColumn<String>('app_version', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: const Constant(""));
i1.GeneratedColumn<DateTime> _column_20(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('time_stamp', aliasedName, false,
        type: i1.DriftSqlType.dateTime, defaultValue: Constant(DateTime(0)));
i1.GeneratedColumn<String> _column_21(String aliasedName) =>
    i1.GeneratedColumn<String>('error', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: const Constant(""));
i1.GeneratedColumn<String> _column_22(String aliasedName) =>
    i1.GeneratedColumn<String>('stack_trace', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: const Constant(""));

class Shape3 extends i0.VersionedTable {
  Shape3({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get sessionType =>
      columnsByName['session_type']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get longestStreak =>
      columnsByName['longest_streak']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get currentStreak =>
      columnsByName['current_streak']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastTimeStreakUpdated =>
      columnsByName['last_time_streak_updated']!
          as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_23(String aliasedName) =>
    i1.GeneratedColumn<int>('session_type', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_24(String aliasedName) =>
    i1.GeneratedColumn<int>('longest_streak', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_25(String aliasedName) =>
    i1.GeneratedColumn<int>('current_streak', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<DateTime> _column_26(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_time_streak_updated', aliasedName, false,
        type: i1.DriftSqlType.dateTime, defaultValue: Constant(DateTime(0)));

class Shape4 extends i0.VersionedTable {
  Shape4({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get sessionType =>
      columnsByName['session_type']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get sessionDuration =>
      columnsByName['session_duration']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get shouldStartDnd =>
      columnsByName['should_start_dnd']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get distractingApps =>
      columnsByName['distracting_apps']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<int> _column_27(String aliasedName) =>
    i1.GeneratedColumn<int>('session_type', aliasedName, false,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<int> _column_28(String aliasedName) =>
    i1.GeneratedColumn<int>('session_duration', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));

class Shape5 extends i0.VersionedTable {
  Shape5({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get type =>
      columnsByName['type']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get state =>
      columnsByName['state']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get startDateTime =>
      columnsByName['start_date_time']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get durationSecs =>
      columnsByName['duration_secs']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_29(String aliasedName) =>
    i1.GeneratedColumn<int>('type', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_30(String aliasedName) =>
    i1.GeneratedColumn<int>('state', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<DateTime> _column_31(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('start_date_time', aliasedName, false,
        type: i1.DriftSqlType.dateTime, defaultValue: Constant(DateTime(0)));
i1.GeneratedColumn<int> _column_32(String aliasedName) =>
    i1.GeneratedColumn<int>('duration_secs', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));

class Shape6 extends i0.VersionedTable {
  Shape6({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get themeMode =>
      columnsByName['theme_mode']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get accentColor =>
      columnsByName['accent_color']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get username =>
      columnsByName['username']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get localeCode =>
      columnsByName['locale_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get dataResetTime =>
      columnsByName['data_reset_time']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get useBottomNavigation =>
      columnsByName['use_bottom_navigation']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get useAmoledDark =>
      columnsByName['use_amoled_dark']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get useDynamicColors =>
      columnsByName['use_dynamic_colors']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get defaultHomeTab =>
      columnsByName['default_home_tab']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get excludedApps =>
      columnsByName['excluded_apps']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get leftEmergencyPasses =>
      columnsByName['left_emergency_passes']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastEmergencyUsed =>
      columnsByName['last_emergency_used']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<bool> get isOnboardingDone =>
      columnsByName['is_onboarding_done']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get protectedAccess =>
      columnsByName['protected_access']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get uninstallWindowTime =>
      columnsByName['uninstall_window_time']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_33(String aliasedName) =>
    i1.GeneratedColumn<int>('theme_mode', aliasedName, false,
        type: i1.DriftSqlType.int,
        defaultValue: Constant(AppConstants.defaultThemeMode.index));
i1.GeneratedColumn<String> _column_34(String aliasedName) =>
    i1.GeneratedColumn<String>('accent_color', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue: const Constant(AppConstants.defaultMaterialColor));
i1.GeneratedColumn<String> _column_35(String aliasedName) =>
    i1.GeneratedColumn<String>('username', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue: const Constant(AppConstants.defaultUsername));
i1.GeneratedColumn<String> _column_36(String aliasedName) =>
    i1.GeneratedColumn<String>('locale_code', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue: const Constant(AppConstants.defaultLocale));
i1.GeneratedColumn<int> _column_37(String aliasedName) =>
    i1.GeneratedColumn<int>('data_reset_time', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<bool> _column_38(String aliasedName) =>
    i1.GeneratedColumn<bool>('use_bottom_navigation', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("use_bottom_navigation" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_39(String aliasedName) =>
    i1.GeneratedColumn<bool>('use_amoled_dark', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("use_amoled_dark" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_40(String aliasedName) =>
    i1.GeneratedColumn<bool>('use_dynamic_colors', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("use_dynamic_colors" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<int> _column_41(String aliasedName) =>
    i1.GeneratedColumn<int>('default_home_tab', aliasedName, false,
        type: i1.DriftSqlType.int,
        defaultValue: Constant(DefaultHomeTab.dashboard.index));
i1.GeneratedColumn<String> _column_42(String aliasedName) =>
    i1.GeneratedColumn<String>('excluded_apps', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: Constant(jsonEncode([])));
i1.GeneratedColumn<int> _column_43(String aliasedName) =>
    i1.GeneratedColumn<int>('left_emergency_passes', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(3));
i1.GeneratedColumn<DateTime> _column_44(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_emergency_used', aliasedName, false,
        type: i1.DriftSqlType.dateTime, defaultValue: Constant(DateTime(0)));
i1.GeneratedColumn<bool> _column_45(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_onboarding_done', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("is_onboarding_done" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_46(String aliasedName) =>
    i1.GeneratedColumn<bool>('protected_access', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("protected_access" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<int> _column_47(String aliasedName) =>
    i1.GeneratedColumn<int>('uninstall_window_time', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));

class Shape7 extends i0.VersionedTable {
  Shape7({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get isInvincibleModeOn =>
      columnsByName['is_invincible_mode_on']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeAppsTimer =>
      columnsByName['include_apps_timer']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeAppsLaunchLimit =>
      columnsByName['include_apps_launch_limit']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeAppsActivePeriod =>
      columnsByName['include_apps_active_period']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeGroupsTimer =>
      columnsByName['include_groups_timer']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeGroupsActivePeriod =>
      columnsByName['include_groups_active_period']!
          as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeShortsTimer =>
      columnsByName['include_shorts_timer']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeBedtimeSchedule =>
      columnsByName['include_bedtime_schedule']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_48(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_invincible_mode_on', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("is_invincible_mode_on" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_49(String aliasedName) =>
    i1.GeneratedColumn<bool>('include_apps_timer', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("include_apps_timer" IN (0, 1))'),
        defaultValue: const Constant(true));
i1.GeneratedColumn<bool> _column_50(String aliasedName) =>
    i1.GeneratedColumn<bool>('include_apps_launch_limit', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("include_apps_launch_limit" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_51(String aliasedName) =>
    i1.GeneratedColumn<bool>('include_apps_active_period', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("include_apps_active_period" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_52(String aliasedName) =>
    i1.GeneratedColumn<bool>('include_groups_timer', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("include_groups_timer" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_53(String aliasedName) =>
    i1.GeneratedColumn<bool>('include_groups_active_period', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("include_groups_active_period" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_54(String aliasedName) =>
    i1.GeneratedColumn<bool>('include_shorts_timer', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("include_shorts_timer" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_55(String aliasedName) =>
    i1.GeneratedColumn<bool>('include_bedtime_schedule', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("include_bedtime_schedule" IN (0, 1))'),
        defaultValue: const Constant(false));

class Shape8 extends i0.VersionedTable {
  Shape8({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get groupName =>
      columnsByName['group_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get timerSec =>
      columnsByName['timer_sec']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodStart =>
      columnsByName['active_period_start']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodEnd =>
      columnsByName['active_period_end']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get periodDurationInMins =>
      columnsByName['period_duration_in_mins']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get distractingApps =>
      columnsByName['distracting_apps']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_56(String aliasedName) =>
    i1.GeneratedColumn<String>('group_name', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: const Constant("Social"));

class Shape9 extends i0.VersionedTable {
  Shape9({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get allowedShortsTimeSec =>
      columnsByName['allowed_shorts_time_sec']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get blockInstaReels =>
      columnsByName['block_insta_reels']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blockYtShorts =>
      columnsByName['block_yt_shorts']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blockSnapSpotlight =>
      columnsByName['block_snap_spotlight']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blockFbReels =>
      columnsByName['block_fb_reels']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blockRedditShorts =>
      columnsByName['block_reddit_shorts']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blockNsfwSites =>
      columnsByName['block_nsfw_sites']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get blockedWebsites =>
      columnsByName['blocked_websites']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<int> _column_57(String aliasedName) =>
    i1.GeneratedColumn<int>('allowed_shorts_time_sec', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(30 * 60));
i1.GeneratedColumn<bool> _column_58(String aliasedName) =>
    i1.GeneratedColumn<bool>('block_insta_reels', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("block_insta_reels" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_59(String aliasedName) =>
    i1.GeneratedColumn<bool>('block_yt_shorts', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("block_yt_shorts" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_60(String aliasedName) =>
    i1.GeneratedColumn<bool>('block_snap_spotlight', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("block_snap_spotlight" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_61(String aliasedName) =>
    i1.GeneratedColumn<bool>('block_fb_reels', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("block_fb_reels" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_62(String aliasedName) =>
    i1.GeneratedColumn<bool>('block_reddit_shorts', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("block_reddit_shorts" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_63(String aliasedName) =>
    i1.GeneratedColumn<bool>('block_nsfw_sites', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("block_nsfw_sites" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<String> _column_64(String aliasedName) =>
    i1.GeneratedColumn<String>('blocked_websites', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: Constant(jsonEncode([])));

final class Schema3 extends i0.VersionedSchema {
  Schema3({required super.database}) : super(version: 3);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appRestrictionTable,
    bedtimeScheduleTable,
    crashLogsTable,
    focusModeTable,
    focusProfileTable,
    focusSessionsTable,
    mindfulSettingsTable,
    invincibleModeTable,
    restrictionGroupsTable,
    wellbeingTable,
    sharedUniqueDataTable,
    notificationScheduleTable,
  ];
  late final Shape0 appRestrictionTable = Shape0(
      source: i0.VersionedTable(
        entityName: 'app_restriction_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(app_package)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 bedtimeScheduleTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'bedtime_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 crashLogsTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'crash_logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 focusModeTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'focus_mode_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 focusProfileTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'focus_profile_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(session_type)',
        ],
        columns: [
          _column_27,
          _column_28,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 focusSessionsTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'focus_sessions_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 mindfulSettingsTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'mindful_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 invincibleModeTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'invincible_mode_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
          _column_55,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 restrictionGroupsTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'restriction_groups_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_56,
          _column_1,
          _column_3,
          _column_4,
          _column_5,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 wellbeingTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'wellbeing_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_57,
          _column_58,
          _column_59,
          _column_60,
          _column_61,
          _column_62,
          _column_63,
          _column_64,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 sharedUniqueDataTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'shared_unique_data_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_10,
          _column_42,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 notificationScheduleTable = Shape12(
      source: i0.VersionedTable(
        entityName: 'notification_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_66,
          _column_67,
          _column_68,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape10 extends i0.VersionedTable {
  Shape10({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get themeMode =>
      columnsByName['theme_mode']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get accentColor =>
      columnsByName['accent_color']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get username =>
      columnsByName['username']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get localeCode =>
      columnsByName['locale_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get dataResetTime =>
      columnsByName['data_reset_time']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get useBottomNavigation =>
      columnsByName['use_bottom_navigation']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get useAmoledDark =>
      columnsByName['use_amoled_dark']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get useDynamicColors =>
      columnsByName['use_dynamic_colors']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get defaultHomeTab =>
      columnsByName['default_home_tab']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get leftEmergencyPasses =>
      columnsByName['left_emergency_passes']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastEmergencyUsed =>
      columnsByName['last_emergency_used']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<bool> get isOnboardingDone =>
      columnsByName['is_onboarding_done']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get protectedAccess =>
      columnsByName['protected_access']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get uninstallWindowTime =>
      columnsByName['uninstall_window_time']! as i1.GeneratedColumn<int>;
}

class Shape11 extends i0.VersionedTable {
  Shape11({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get excludedApps =>
      columnsByName['excluded_apps']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get notificationBatchedApps =>
      columnsByName['notification_batched_apps']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_65(String aliasedName) =>
    i1.GeneratedColumn<String>('notification_batched_apps', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: Constant(jsonEncode([])));

class Shape12 extends i0.VersionedTable {
  Shape12({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get isActive =>
      columnsByName['is_active']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get label =>
      columnsByName['label']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get time =>
      columnsByName['time']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<bool> _column_66(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_active', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("is_active" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<String> _column_67(String aliasedName) =>
    i1.GeneratedColumn<String>('label', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: const Constant(""));
i1.GeneratedColumn<int> _column_68(String aliasedName) =>
    i1.GeneratedColumn<int>('time', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));

final class Schema4 extends i0.VersionedSchema {
  Schema4({required super.database}) : super(version: 4);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appRestrictionTable,
    bedtimeScheduleTable,
    crashLogsTable,
    focusModeTable,
    focusProfileTable,
    focusSessionsTable,
    mindfulSettingsTable,
    parentalControlsTable,
    restrictionGroupsTable,
    wellbeingTable,
    sharedUniqueDataTable,
    notificationScheduleTable,
    appUsageTable,
  ];
  late final Shape13 appRestrictionTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'app_restriction_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(app_package)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_7,
          _column_6,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 bedtimeScheduleTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'bedtime_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_69,
          _column_15,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 crashLogsTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'crash_logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 focusModeTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'focus_mode_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 focusProfileTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'focus_profile_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(session_type)',
        ],
        columns: [
          _column_27,
          _column_28,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 focusSessionsTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'focus_sessions_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 mindfulSettingsTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'mindful_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_39,
          _column_40,
          _column_41,
          _column_70,
          _column_43,
          _column_44,
          _column_45,
          _column_19,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape15 parentalControlsTable = Shape15(
      source: i0.VersionedTable(
        entityName: 'parental_controls_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_46,
          _column_47,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
          _column_55,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 restrictionGroupsTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'restriction_groups_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_56,
          _column_1,
          _column_3,
          _column_4,
          _column_5,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape16 wellbeingTable = Shape16(
      source: i0.VersionedTable(
        entityName: 'wellbeing_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_57,
          _column_58,
          _column_59,
          _column_60,
          _column_61,
          _column_62,
          _column_63,
          _column_64,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 sharedUniqueDataTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'shared_unique_data_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_42,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 notificationScheduleTable = Shape12(
      source: i0.VersionedTable(
        entityName: 'notification_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_66,
          _column_67,
          _column_68,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 appUsageTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(package_name, date)',
        ],
        columns: [
          _column_72,
          _column_73,
          _column_74,
          _column_75,
          _column_76,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape13 extends i0.VersionedTable {
  Shape13({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get appPackage =>
      columnsByName['app_package']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get timerSec =>
      columnsByName['timer_sec']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get launchLimit =>
      columnsByName['launch_limit']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodStart =>
      columnsByName['active_period_start']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodEnd =>
      columnsByName['active_period_end']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get periodDurationInMins =>
      columnsByName['period_duration_in_mins']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get associatedGroupId =>
      columnsByName['associated_group_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get canAccessInternet =>
      columnsByName['can_access_internet']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<String> _column_69(String aliasedName) =>
    i1.GeneratedColumn<String>('schedule_days', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue:
            Constant(jsonEncode([true, true, true, true, true, false, false])));

class Shape14 extends i0.VersionedTable {
  Shape14({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get themeMode =>
      columnsByName['theme_mode']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get accentColor =>
      columnsByName['accent_color']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get username =>
      columnsByName['username']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get localeCode =>
      columnsByName['locale_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get useAmoledDark =>
      columnsByName['use_amoled_dark']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get useDynamicColors =>
      columnsByName['use_dynamic_colors']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get defaultHomeTab =>
      columnsByName['default_home_tab']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get usageHistoryWeeks =>
      columnsByName['usage_history_weeks']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get leftEmergencyPasses =>
      columnsByName['left_emergency_passes']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastEmergencyUsed =>
      columnsByName['last_emergency_used']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<bool> get isOnboardingDone =>
      columnsByName['is_onboarding_done']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<int> _column_70(String aliasedName) =>
    i1.GeneratedColumn<int>('usage_history_weeks', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(4));

class Shape15 extends i0.VersionedTable {
  Shape15({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get protectedAccess =>
      columnsByName['protected_access']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get uninstallWindowTime =>
      columnsByName['uninstall_window_time']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get isInvincibleModeOn =>
      columnsByName['is_invincible_mode_on']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeAppsTimer =>
      columnsByName['include_apps_timer']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeAppsLaunchLimit =>
      columnsByName['include_apps_launch_limit']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeAppsActivePeriod =>
      columnsByName['include_apps_active_period']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeGroupsTimer =>
      columnsByName['include_groups_timer']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeGroupsActivePeriod =>
      columnsByName['include_groups_active_period']!
          as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeShortsTimer =>
      columnsByName['include_shorts_timer']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeBedtimeSchedule =>
      columnsByName['include_bedtime_schedule']! as i1.GeneratedColumn<bool>;
}

class Shape16 extends i0.VersionedTable {
  Shape16({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get allowedShortsTimeSec =>
      columnsByName['allowed_shorts_time_sec']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get blockInstaReels =>
      columnsByName['block_insta_reels']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blockYtShorts =>
      columnsByName['block_yt_shorts']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blockSnapSpotlight =>
      columnsByName['block_snap_spotlight']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blockFbReels =>
      columnsByName['block_fb_reels']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blockRedditShorts =>
      columnsByName['block_reddit_shorts']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blockNsfwSites =>
      columnsByName['block_nsfw_sites']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get blockedWebsites =>
      columnsByName['blocked_websites']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get nsfwWebsites =>
      columnsByName['nsfw_websites']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_71(String aliasedName) =>
    i1.GeneratedColumn<String>('nsfw_websites', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: Constant(jsonEncode([])));

class Shape17 extends i0.VersionedTable {
  Shape17({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get packageName =>
      columnsByName['package_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get date =>
      columnsByName['date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get screenTime =>
      columnsByName['screen_time']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get mobileData =>
      columnsByName['mobile_data']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get wifiData =>
      columnsByName['wifi_data']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<String> _column_72(String aliasedName) =>
    i1.GeneratedColumn<String>('package_name', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_73(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('date', aliasedName, false,
        type: i1.DriftSqlType.dateTime, defaultValue: Constant(DateTime(0)));
i1.GeneratedColumn<int> _column_74(String aliasedName) =>
    i1.GeneratedColumn<int>('screen_time', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_75(String aliasedName) =>
    i1.GeneratedColumn<int>('mobile_data', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_76(String aliasedName) =>
    i1.GeneratedColumn<int>('wifi_data', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));

final class Schema5 extends i0.VersionedSchema {
  Schema5({required super.database}) : super(version: 5);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appRestrictionTable,
    bedtimeScheduleTable,
    crashLogsTable,
    focusModeTable,
    focusProfileTable,
    focusSessionsTable,
    mindfulSettingsTable,
    parentalControlsTable,
    restrictionGroupsTable,
    wellbeingTable,
    sharedUniqueDataTable,
    notificationScheduleTable,
    appUsageTable,
  ];
  late final Shape13 appRestrictionTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'app_restriction_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(app_package)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_7,
          _column_6,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 bedtimeScheduleTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'bedtime_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_69,
          _column_15,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 crashLogsTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'crash_logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 focusModeTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'focus_mode_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 focusProfileTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'focus_profile_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(session_type)',
        ],
        columns: [
          _column_27,
          _column_28,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 focusSessionsTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'focus_sessions_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 mindfulSettingsTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'mindful_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_39,
          _column_40,
          _column_41,
          _column_70,
          _column_43,
          _column_44,
          _column_45,
          _column_19,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape18 parentalControlsTable = Shape18(
      source: i0.VersionedTable(
        entityName: 'parental_controls_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_46,
          _column_47,
          _column_48,
          _column_77,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
          _column_55,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 restrictionGroupsTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'restriction_groups_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_56,
          _column_1,
          _column_3,
          _column_4,
          _column_5,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 wellbeingTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'wellbeing_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_57,
          _column_78,
          _column_63,
          _column_64,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 sharedUniqueDataTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'shared_unique_data_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_42,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 notificationScheduleTable = Shape12(
      source: i0.VersionedTable(
        entityName: 'notification_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_66,
          _column_67,
          _column_68,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 appUsageTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(package_name, date)',
        ],
        columns: [
          _column_72,
          _column_73,
          _column_74,
          _column_75,
          _column_76,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape18 extends i0.VersionedTable {
  Shape18({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get protectedAccess =>
      columnsByName['protected_access']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get uninstallWindowTime =>
      columnsByName['uninstall_window_time']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get isInvincibleModeOn =>
      columnsByName['is_invincible_mode_on']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get invincibleWindowTime =>
      columnsByName['invincible_window_time']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get includeAppsTimer =>
      columnsByName['include_apps_timer']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeAppsLaunchLimit =>
      columnsByName['include_apps_launch_limit']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeAppsActivePeriod =>
      columnsByName['include_apps_active_period']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeGroupsTimer =>
      columnsByName['include_groups_timer']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeGroupsActivePeriod =>
      columnsByName['include_groups_active_period']!
          as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeShortsTimer =>
      columnsByName['include_shorts_timer']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get includeBedtimeSchedule =>
      columnsByName['include_bedtime_schedule']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<int> _column_77(String aliasedName) =>
    i1.GeneratedColumn<int>('invincible_window_time', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));

class Shape19 extends i0.VersionedTable {
  Shape19({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get allowedShortsTimeSec =>
      columnsByName['allowed_shorts_time_sec']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get blockedFeatures =>
      columnsByName['blocked_features']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get blockNsfwSites =>
      columnsByName['block_nsfw_sites']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get blockedWebsites =>
      columnsByName['blocked_websites']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get nsfwWebsites =>
      columnsByName['nsfw_websites']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_78(String aliasedName) =>
    i1.GeneratedColumn<String>('blocked_features', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: Constant(jsonEncode([])));

final class Schema6 extends i0.VersionedSchema {
  Schema6({required super.database}) : super(version: 6);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appRestrictionTable,
    bedtimeScheduleTable,
    crashLogsTable,
    focusModeTable,
    focusProfileTable,
    focusSessionsTable,
    mindfulSettingsTable,
    parentalControlsTable,
    restrictionGroupsTable,
    wellbeingTable,
    sharedUniqueDataTable,
    notificationScheduleTable,
    appUsageTable,
  ];
  late final Shape13 appRestrictionTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'app_restriction_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(app_package)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_7,
          _column_6,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 bedtimeScheduleTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'bedtime_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_69,
          _column_15,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 crashLogsTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'crash_logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 focusModeTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'focus_mode_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 focusProfileTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'focus_profile_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(session_type)',
        ],
        columns: [
          _column_27,
          _column_28,
          _column_79,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 focusSessionsTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'focus_sessions_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_80,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 mindfulSettingsTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'mindful_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_39,
          _column_40,
          _column_41,
          _column_70,
          _column_43,
          _column_44,
          _column_45,
          _column_19,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape18 parentalControlsTable = Shape18(
      source: i0.VersionedTable(
        entityName: 'parental_controls_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_46,
          _column_47,
          _column_48,
          _column_77,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
          _column_55,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 restrictionGroupsTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'restriction_groups_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_56,
          _column_1,
          _column_3,
          _column_4,
          _column_5,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 wellbeingTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'wellbeing_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_57,
          _column_78,
          _column_63,
          _column_64,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 sharedUniqueDataTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'shared_unique_data_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_42,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 notificationScheduleTable = Shape12(
      source: i0.VersionedTable(
        entityName: 'notification_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_66,
          _column_67,
          _column_68,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 appUsageTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(package_name, date)',
        ],
        columns: [
          _column_72,
          _column_73,
          _column_74,
          _column_75,
          _column_76,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape20 extends i0.VersionedTable {
  Shape20({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get sessionType =>
      columnsByName['session_type']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get sessionDuration =>
      columnsByName['session_duration']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get enforceSession =>
      columnsByName['enforce_session']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get shouldStartDnd =>
      columnsByName['should_start_dnd']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get distractingApps =>
      columnsByName['distracting_apps']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<bool> _column_79(String aliasedName) =>
    i1.GeneratedColumn<bool>('enforce_session', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("enforce_session" IN (0, 1))'),
        defaultValue: const Constant(false));

class Shape21 extends i0.VersionedTable {
  Shape21({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get type =>
      columnsByName['type']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get state =>
      columnsByName['state']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get startDateTime =>
      columnsByName['start_date_time']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get durationSecs =>
      columnsByName['duration_secs']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get reflection =>
      columnsByName['reflection']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_80(String aliasedName) =>
    i1.GeneratedColumn<String>('reflection', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: const Constant(""));

final class Schema7 extends i0.VersionedSchema {
  Schema7({required super.database}) : super(version: 7);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appRestrictionTable,
    bedtimeScheduleTable,
    crashLogsTable,
    focusModeTable,
    focusProfileTable,
    focusSessionsTable,
    mindfulSettingsTable,
    parentalControlsTable,
    restrictionGroupsTable,
    wellbeingTable,
    sharedUniqueDataTable,
    appUsageTable,
    notificationSettingsTable,
    notificationsTable,
  ];
  late final Shape13 appRestrictionTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'app_restriction_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(app_package)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_7,
          _column_6,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 bedtimeScheduleTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'bedtime_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_69,
          _column_15,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 crashLogsTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'crash_logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 focusModeTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'focus_mode_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 focusProfileTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'focus_profile_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(session_type)',
        ],
        columns: [
          _column_27,
          _column_28,
          _column_79,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 focusSessionsTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'focus_sessions_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_80,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 mindfulSettingsTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'mindful_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_39,
          _column_40,
          _column_41,
          _column_70,
          _column_43,
          _column_44,
          _column_45,
          _column_19,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape18 parentalControlsTable = Shape18(
      source: i0.VersionedTable(
        entityName: 'parental_controls_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_46,
          _column_47,
          _column_48,
          _column_77,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
          _column_55,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 restrictionGroupsTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'restriction_groups_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_56,
          _column_1,
          _column_3,
          _column_4,
          _column_5,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 wellbeingTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'wellbeing_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_57,
          _column_78,
          _column_63,
          _column_64,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 sharedUniqueDataTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'shared_unique_data_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_42,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 appUsageTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(package_name, date)',
        ],
        columns: [
          _column_72,
          _column_73,
          _column_74,
          _column_75,
          _column_76,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 notificationSettingsTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'notification_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_85,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 notificationsTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'notifications_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_86,
          _column_72,
          _column_20,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape22 extends i0.VersionedTable {
  Shape22({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get excludedApps =>
      columnsByName['excluded_apps']! as i1.GeneratedColumn<String>;
}

class Shape23 extends i0.VersionedTable {
  Shape23({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get recapType =>
      columnsByName['recap_type']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationHistoryWeeks =>
      columnsByName['notification_history_weeks']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get storeNonBatchedToo =>
      columnsByName['store_non_batched_too']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get batchedApps =>
      columnsByName['batched_apps']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get schedules =>
      columnsByName['schedules']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<int> _column_81(String aliasedName) =>
    i1.GeneratedColumn<int>('recap_type', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(0));
i1.GeneratedColumn<int> _column_82(String aliasedName) =>
    i1.GeneratedColumn<int>('notification_history_weeks', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Constant(2));
i1.GeneratedColumn<bool> _column_83(String aliasedName) =>
    i1.GeneratedColumn<bool>('store_non_batched_too', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("store_non_batched_too" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<String> _column_84(String aliasedName) =>
    i1.GeneratedColumn<String>('batched_apps', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: Constant(jsonEncode([])));
i1.GeneratedColumn<String> _column_85(String aliasedName) =>
    i1.GeneratedColumn<String>('schedules', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue:
            Constant(jsonEncode(defaultNotificationSettingsModel.schedules)));

class Shape24 extends i0.VersionedTable {
  Shape24({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get key =>
      columnsByName['key']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get packageName =>
      columnsByName['package_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get timeStamp =>
      columnsByName['time_stamp']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get content =>
      columnsByName['content']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isRead =>
      columnsByName['is_read']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<String> _column_86(String aliasedName) =>
    i1.GeneratedColumn<String>('key', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_87(String aliasedName) =>
    i1.GeneratedColumn<String>('title', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: const Constant(""));
i1.GeneratedColumn<String> _column_88(String aliasedName) =>
    i1.GeneratedColumn<String>('content', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: const Constant(""));
i1.GeneratedColumn<String> _column_89(String aliasedName) =>
    i1.GeneratedColumn<String>('category', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: const Constant(""));
i1.GeneratedColumn<bool> _column_90(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_read', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("is_read" IN (0, 1))'),
        defaultValue: const Constant(false));

final class Schema8 extends i0.VersionedSchema {
  Schema8({required super.database}) : super(version: 8);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appRestrictionTable,
    bedtimeScheduleTable,
    crashLogsTable,
    focusModeTable,
    focusProfileTable,
    focusSessionsTable,
    mindfulSettingsTable,
    parentalControlsTable,
    restrictionGroupsTable,
    wellbeingTable,
    sharedUniqueDataTable,
    appUsageTable,
    notificationSettingsTable,
    notificationsTable,
  ];
  late final Shape25 appRestrictionTable = Shape25(
      source: i0.VersionedTable(
        entityName: 'app_restriction_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(app_package)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_7,
          _column_6,
          _column_91,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 bedtimeScheduleTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'bedtime_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_69,
          _column_15,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 crashLogsTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'crash_logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 focusModeTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'focus_mode_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 focusProfileTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'focus_profile_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(session_type)',
        ],
        columns: [
          _column_27,
          _column_28,
          _column_79,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 focusSessionsTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'focus_sessions_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_80,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 mindfulSettingsTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'mindful_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_39,
          _column_40,
          _column_41,
          _column_70,
          _column_43,
          _column_44,
          _column_45,
          _column_19,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape18 parentalControlsTable = Shape18(
      source: i0.VersionedTable(
        entityName: 'parental_controls_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_46,
          _column_47,
          _column_48,
          _column_77,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
          _column_55,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 restrictionGroupsTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'restriction_groups_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_56,
          _column_1,
          _column_3,
          _column_4,
          _column_5,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 wellbeingTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'wellbeing_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_57,
          _column_78,
          _column_63,
          _column_64,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 sharedUniqueDataTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'shared_unique_data_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_42,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 appUsageTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(package_name, date)',
        ],
        columns: [
          _column_72,
          _column_73,
          _column_74,
          _column_75,
          _column_76,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 notificationSettingsTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'notification_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_85,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 notificationsTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'notifications_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_86,
          _column_72,
          _column_20,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape25 extends i0.VersionedTable {
  Shape25({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get appPackage =>
      columnsByName['app_package']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get timerSec =>
      columnsByName['timer_sec']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get launchLimit =>
      columnsByName['launch_limit']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodStart =>
      columnsByName['active_period_start']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodEnd =>
      columnsByName['active_period_end']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get periodDurationInMins =>
      columnsByName['period_duration_in_mins']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get associatedGroupId =>
      columnsByName['associated_group_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get canAccessInternet =>
      columnsByName['can_access_internet']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get usageReminders =>
      columnsByName['usage_reminders']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_91(String aliasedName) =>
    i1.GeneratedColumn<bool>('usage_reminders', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("usage_reminders" IN (0, 1))'),
        defaultValue: const Constant(true));

final class Schema9 extends i0.VersionedSchema {
  Schema9({required super.database}) : super(version: 9);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    appRestrictionTable,
    bedtimeScheduleTable,
    crashLogsTable,
    focusModeTable,
    focusProfileTable,
    focusSessionsTable,
    mindfulSettingsTable,
    parentalControlsTable,
    restrictionGroupsTable,
    wellbeingTable,
    sharedUniqueDataTable,
    appUsageTable,
    notificationSettingsTable,
    notificationsTable,
  ];
  late final Shape26 appRestrictionTable = Shape26(
      source: i0.VersionedTable(
        entityName: 'app_restriction_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(app_package)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_7,
          _column_6,
          _column_92,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 bedtimeScheduleTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'bedtime_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_69,
          _column_15,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 crashLogsTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'crash_logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 focusModeTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'focus_mode_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 focusProfileTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'focus_profile_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(session_type)',
        ],
        columns: [
          _column_27,
          _column_28,
          _column_79,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 focusSessionsTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'focus_sessions_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_80,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 mindfulSettingsTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'mindful_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_39,
          _column_40,
          _column_41,
          _column_70,
          _column_43,
          _column_44,
          _column_45,
          _column_19,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape18 parentalControlsTable = Shape18(
      source: i0.VersionedTable(
        entityName: 'parental_controls_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_46,
          _column_47,
          _column_48,
          _column_77,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
          _column_55,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 restrictionGroupsTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'restriction_groups_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_56,
          _column_1,
          _column_3,
          _column_4,
          _column_5,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 wellbeingTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'wellbeing_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_57,
          _column_78,
          _column_63,
          _column_64,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 sharedUniqueDataTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'shared_unique_data_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_42,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 appUsageTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(package_name, date)',
        ],
        columns: [
          _column_72,
          _column_73,
          _column_74,
          _column_75,
          _column_76,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 notificationSettingsTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'notification_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_85,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 notificationsTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'notifications_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_86,
          _column_72,
          _column_20,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape26 extends i0.VersionedTable {
  Shape26({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get appPackage =>
      columnsByName['app_package']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get timerSec =>
      columnsByName['timer_sec']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get launchLimit =>
      columnsByName['launch_limit']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodStart =>
      columnsByName['active_period_start']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodEnd =>
      columnsByName['active_period_end']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get periodDurationInMins =>
      columnsByName['period_duration_in_mins']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get associatedGroupId =>
      columnsByName['associated_group_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get canAccessInternet =>
      columnsByName['can_access_internet']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get reminderType =>
      columnsByName['reminder_type']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_92(String aliasedName) =>
    i1.GeneratedColumn<String>('reminder_type', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue: Constant(ReminderType.toast.name));

final class Schema10 extends i0.VersionedSchema {
  Schema10({required super.database}) : super(version: 10);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    webRestrictionTable,
    appRestrictionTable,
    bedtimeScheduleTable,
    crashLogsTable,
    focusModeTable,
    focusProfileTable,
    focusSessionsTable,
    mindfulSettingsTable,
    parentalControlsTable,
    restrictionGroupsTable,
    wellbeingTable,
    sharedUniqueDataTable,
    appUsageTable,
    notificationSettingsTable,
    notificationsTable,
  ];
  late final Shape27 webRestrictionTable = Shape27(
      source: i0.VersionedTable(
        entityName: 'web_restriction_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(host)',
        ],
        columns: [
          _column_93,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_7,
          _column_94,
          _column_92,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape26 appRestrictionTable = Shape26(
      source: i0.VersionedTable(
        entityName: 'app_restriction_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(app_package)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_7,
          _column_6,
          _column_92,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 bedtimeScheduleTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'bedtime_schedule_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_69,
          _column_15,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 crashLogsTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'crash_logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 focusModeTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'focus_mode_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 focusProfileTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'focus_profile_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(session_type)',
        ],
        columns: [
          _column_27,
          _column_28,
          _column_79,
          _column_16,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 focusSessionsTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'focus_sessions_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_80,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 mindfulSettingsTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'mindful_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_39,
          _column_40,
          _column_41,
          _column_70,
          _column_43,
          _column_44,
          _column_45,
          _column_19,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape18 parentalControlsTable = Shape18(
      source: i0.VersionedTable(
        entityName: 'parental_controls_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_46,
          _column_47,
          _column_48,
          _column_77,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
          _column_55,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 restrictionGroupsTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'restriction_groups_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_56,
          _column_1,
          _column_3,
          _column_4,
          _column_5,
          _column_17,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 wellbeingTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'wellbeing_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_57,
          _column_78,
          _column_63,
          _column_64,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 sharedUniqueDataTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'shared_unique_data_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_42,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 appUsageTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'app_usage_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(package_name, date)',
        ],
        columns: [
          _column_72,
          _column_73,
          _column_74,
          _column_75,
          _column_76,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 notificationSettingsTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'notification_settings_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_10,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_85,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 notificationsTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'notifications_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_18,
          _column_86,
          _column_72,
          _column_20,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape27 extends i0.VersionedTable {
  Shape27({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get host =>
      columnsByName['host']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get timerSec =>
      columnsByName['timer_sec']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get launchLimit =>
      columnsByName['launch_limit']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodStart =>
      columnsByName['active_period_start']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get activePeriodEnd =>
      columnsByName['active_period_end']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get periodDurationInMins =>
      columnsByName['period_duration_in_mins']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get associatedGroupId =>
      columnsByName['associated_group_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get isNsfw =>
      columnsByName['is_nsfw']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get reminderType =>
      columnsByName['reminder_type']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_93(String aliasedName) =>
    i1.GeneratedColumn<String>('host', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_94(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_nsfw', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("is_nsfw" IN (0, 1))'),
        defaultValue: const Constant(false));
i0.MigrationStepWithVersion migrationSteps({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, Schema3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, Schema4 schema) from3To4,
  required Future<void> Function(i1.Migrator m, Schema5 schema) from4To5,
  required Future<void> Function(i1.Migrator m, Schema6 schema) from5To6,
  required Future<void> Function(i1.Migrator m, Schema7 schema) from6To7,
  required Future<void> Function(i1.Migrator m, Schema8 schema) from7To8,
  required Future<void> Function(i1.Migrator m, Schema9 schema) from8To9,
  required Future<void> Function(i1.Migrator m, Schema10 schema) from9To10,
}) {
  return (currentVersion, database) async {
    switch (currentVersion) {
      case 1:
        final schema = Schema2(database: database);
        final migrator = i1.Migrator(database, schema);
        await from1To2(migrator, schema);
        return 2;
      case 2:
        final schema = Schema3(database: database);
        final migrator = i1.Migrator(database, schema);
        await from2To3(migrator, schema);
        return 3;
      case 3:
        final schema = Schema4(database: database);
        final migrator = i1.Migrator(database, schema);
        await from3To4(migrator, schema);
        return 4;
      case 4:
        final schema = Schema5(database: database);
        final migrator = i1.Migrator(database, schema);
        await from4To5(migrator, schema);
        return 5;
      case 5:
        final schema = Schema6(database: database);
        final migrator = i1.Migrator(database, schema);
        await from5To6(migrator, schema);
        return 6;
      case 6:
        final schema = Schema7(database: database);
        final migrator = i1.Migrator(database, schema);
        await from6To7(migrator, schema);
        return 7;
      case 7:
        final schema = Schema8(database: database);
        final migrator = i1.Migrator(database, schema);
        await from7To8(migrator, schema);
        return 8;
      case 8:
        final schema = Schema9(database: database);
        final migrator = i1.Migrator(database, schema);
        await from8To9(migrator, schema);
        return 9;
      case 9:
        final schema = Schema10(database: database);
        final migrator = i1.Migrator(database, schema);
        await from9To10(migrator, schema);
        return 10;
      default:
        throw ArgumentError.value('Unknown migration from $currentVersion');
    }
  };
}

i1.OnUpgrade stepByStep({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, Schema3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, Schema4 schema) from3To4,
  required Future<void> Function(i1.Migrator m, Schema5 schema) from4To5,
  required Future<void> Function(i1.Migrator m, Schema6 schema) from5To6,
  required Future<void> Function(i1.Migrator m, Schema7 schema) from6To7,
  required Future<void> Function(i1.Migrator m, Schema8 schema) from7To8,
  required Future<void> Function(i1.Migrator m, Schema9 schema) from8To9,
  required Future<void> Function(i1.Migrator m, Schema10 schema) from9To10,
}) =>
    i0.VersionedSchema.stepByStepHelper(
        step: migrationSteps(
      from1To2: from1To2,
      from2To3: from2To3,
      from3To4: from3To4,
      from4To5: from4To5,
      from5To6: from5To6,
      from6To7: from6To7,
      from7To8: from7To8,
      from8To9: from8To9,
      from9To10: from9To10,
    ));
